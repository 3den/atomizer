#!/usr/bin/env node

/*
 * Copyright (c) 2015, Yahoo Inc. All rights reserved.
 * Copyrights licensed under the New BSD License.
 * See the accompanying LICENSE file for terms.
 */

'use strict';

process.title = 'atomizer';

var path = require('path');
var fs = require('fs');
var chalk = require('chalk');
var atomizer = require('atomizer');
var configObjs = [];

var params = require('minimist')(process.argv.slice(2));

if (process.argv.slice(2).length === 0 || params.help) {
    var usage = ['usage:  ', process.title, '[-o|--outfile=<file>] [--help] configfile ...'].join(' ');
    console.log(usage);
    return;
}

// TODO
var options = {
    require: []
}; 

if (options.require.length > 0) {
    options.require = options.require.map(function (file) {
        return path.resolve(file);
    });
}

var srcFiles = params._ || [];
srcFiles = srcFiles.filter(function(filepath) {
    if (!fs.existsSync(filepath)) { 
        console.warn('Configuration file ' + chalk.cyan(filepath) + ' not found.');
        return false;
    } else {
        configObjs.push(require(path.resolve(filepath)));
        return true;
    }
});

var content = atomizer(configObjs, options);

var outfile = params.o || params.outfile;
if (outfile) {
    fs.mkdir(path.dirname(outfile), function (err) {
        // Fail silently
        fs.writeFile(path.resolve(outfile), content, function (err) {
            if (err) throw err;
            console.log('File ' + chalk.cyan(outfile) + ' created.');
        });
    });
} else {
    process.stdout.write(content);
}